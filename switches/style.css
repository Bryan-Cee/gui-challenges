@custom-media --motionOK (prefers-reduced-motion: no-preference);

.gui-switch {


  --track-size: calc(var(--thumb-size) * 2);
  --track-padding: 2px;

  --track-inactive: hsl(80 0% 80%);
  --track-active: hsl(80 60% 45%);

  --track-color-inactive: var(--track-inactive);
  --track-color-active: var(--track-active);

  --thumb-size: 2rem;
  --thumb: hsl(0 0% 100%);
  --thumb-highlight: hsl(0 0% 0% / 25%);

  --thumb-color: var(--thumb);
  --thumb-color-highlight: var(--thumb-highlight);

  display: flex;
  align-items: center;
  gap: 2ch;
  justify-content: space-between;

  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;

  @media (prefers-color-scheme: dark) {
    --track-inactive: hsl(80 0% 35%);
    --track-active: hsl(80 60% 60%);

    --thumb: hsl(0 0% 5%);
    --thumb-highlight: hsl(0 0% 100% / 25%);
  }
  
  --isLTR: 1;
  &:dir(rtl) {
    --isLTR: -1;
  }
}

.gui-switch > input {
  --thumb-position: 0%;

  appearance: none;
  border: none;
  outline-offset: 5px;
  box-sizing: content-box;

  inline-size: var(--track-size);
  block-size: var(--thumb-size);
  padding: var(--track-padding);
  background: var(--track-color-inactive);
  border-radius: var(--track-size);

  flex-shrink: 0;
  display: grid;
  align-items: center;
  grid: [track] 1fr / [track] 1fr;
}

.gui-switch > input::before {
  content: "";
  grid-area: track;
  inline-size: var(--thumb-size);
  block-size: var(--thumb-size);
  background: var(--thumb-color);
  border-radius: 50%;

  box-shadow: 0 0 0 var(--highlight-size) var(--thumb-color-highlight);
  transform: translateX(var(--thumb-position));

  @media (--motionOK){
    transition: 
      transform var(--thumb-transition-duration) ease,
      box-shadow .24s ease;
  }
}

.gui-switch > input:checked {
  background: var(--track-color-active);
  --thumb-position: calc((var(--track-size) - 100%) * var(--isLTR));
}

.gui-switch > input:indeterminate {
  --thumb-position: calc(((var(--track-size) / 2) - (var(--thumb-size) / 2)) * var(--isLTR));
}

.gui-switch.-vertical {
  min-block-size: calc(var(--track-size) + calc(var(--track-padding) * 2));

  & > input {
    transform: rotate(calc(90deg * var(--isLTR) * -1));
  }
}